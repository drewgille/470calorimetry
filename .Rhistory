load("~/470calorimetry/x.RData")
View(x)
calorimetry <- load("~/470calorimetry/x.RData")
load("~/470calorimetry/x.RData")
View(x)
View(x)
model <- lmer(REE~ICUorSDU + obesity, data= x)
library(lme4)
model <- lmer(REE~ICUorSDU + obesity, data= x)
model <- lmer(REE~ICUorSDU + obese, data= x)
model <- lmer(REE~ICUorSDU + obese + (1|ParticipantID), data= x)
summary(model)
View(x)
class(x$REE)
library(lme4)
library(dplyr)
load("~/470calorimetry/x.RData")
x <- x %>%
mutate(ICU = ifelse(ICUorSDU == "ICU", 1, 0))
View(x)
View(x)
x <- x %>%
mutate(ICU = ifelse(ICUorSDU == "ICU", 1, 0))
anyDuplicated(names(x))
View(x)
names(x)[duplicated(names(x))]
load("~/470calorimetry/x.RData")
x <- x[, !duplicated(names(x))]
x <- x %>%
mutate(ICU = ifelse(ICUorSDU == "ICU", 1, 0))
View(x)
model <- lmer(REE~ICU + obese + (1|ParticipantID), data= x)
summary(model)
residuals <- residuals(model)
qqnorm(residuals)
qqline(residuals, col = "red")
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
4
residuals <- residuals(model)
qqnorm(residuals)
qqline(residuals, col = "red")
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
x$ICUorSDU <- as.factor(x$ICUorSDU)
x$ventilator <- as.factor(x$ventilator)
x$obese <- as.factor(x$obese)
x$Sex <- as.factor(x$Sex)
x$Race <- as.factor(x$Race)
x$TypeofSurgery <- as.factor(x$TypeofSurgery)
duplicated_indices <- which(names(x) == "MSJ")
names(x)[duplicated_indices[2]] <- "MSJ_2"
duplicated_indices <- which(names(x) == "MSJ")
names(x)[duplicated_indices[2]] <- "MSJ_2"
duplicated_indices <- which(names(x) == "MSJ")
names(x)[duplicated_indices[2]] <- "MSJ_2"
summary(x)
library(ggplot2)
# Plotting REE distributions by obesity status
ggplot(x, aes(x = obese, y = REE)) + geom_boxplot() + labs(title = "REE by Obesity Status")
library(Matrix)
library(lme4)
model <- lmer(REE ~ ICUorSDU + ventilator + obese + (1 | ParticipantID), data = x)
summary(model)
plot(residuals(model))
qqnorm(residuals(model)); qqline(residuals(model))
library(pbkrtest)
install.packages(pbkrtest)
library(pbkrtest)
model1 <- lmer(REE ~ ICUorSDU + (1 | ParticipantID), data = x)
model2 <- update(model1, .~. + ventilator + obese)
# Compare
test <- KRmodcomp(model1, model2)
summary(test)
qqunif(random_effects)
residuals <- residuals(model)
qqnorm(residuals)
qqline(residuals, col = "red")
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
plot(residuals(model))
qqnorm(residuals(model)); qqline(residuals(model))
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
plot(residuals(model))
qqnorm(residuals(model)); qqline(residuals(model))
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
library(lattice)
qqmath(resid(model), main = "QQ Plot of Residuals")  # Checking for normality
plot(resid(model) ~ fitted(model), main = "Residuals vs Fitted Values")  # Checking for homogeneity
random_effects <- ranef(model)$ParticipantID[[1]]
qqnorm(random_effects)
qqline(random_effects, col = "blue")
plot(residuals(model))
qqnorm(residuals(model)); qqline(residuals(model))
